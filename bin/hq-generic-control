#!/usr/bin/env ruby
#
# Link /etc/init.d/NAME to this file, then create a file /etc/default/NAME with
# the following, or similar, constants:
#
# PID_PATH = "/var/run/NAME.pid"
# EXE_PATTERN = /^\/bin\/NAME$/
# START_CMD = "/bin/NAME -a -b -c"
#
require "etc"

NAME = File.basename $0
load "/etc/default/#{NAME}"

def is_running

	# check pid file exists

	return false unless File.exist?(PID_PATH)

	# read pid file

	pid = File.read(PID_PATH).to_i

	# make sure process is running

	return false unless File.directory?("/proc/#{pid}")

	# check executable

	if EXE_PATTERN
		exe_path = File.readlink("/proc/#{pid}/exe")
		exe_path = $1 if exe_path =~ /^(.+) \(deleted\)$/
		return false unless exe_path =~ EXE_PATTERN
	end

	return pid

end

def start
	return if is_running
	$stderr.puts "Service #{NAME} starting"
	system START_CMD
end

def stop
	exit 0 unless pid = is_running
	$stderr.puts "Service #{NAME} stopping"
	Process.kill "TERM", pid
	while File.directory? "/proc/#{pid}"
		sleep 0.1
	end
end

case ARGV[0]

when "start"
	start

when "stop"
	stop

when "status"
	if is_running
		$stderr.puts "Service #{NAME} running"
		exit 0
	else
		$stderr.puts "Service #{NAME} not running"
		exit 3
	end

when "restart"
	stop if is_running
	start

else
	$stderr.puts "Invalid command #{ARGV[0]}"
	exit 1

end
