#!/usr/bin/ruby1.8

require "etc"

NAME = File.basename $0
load "/etc/default/#{NAME}"

def is_running
	return false unless File.exist? PID_PATH
	pid = File.read(PID_PATH).to_i
	return false unless File.directory? "/proc/#{pid}"
	return false unless File.readlink("/proc/#{pid}/exe") == EXE_PATH
	return pid
end

def start
	return if is_running
	puts "Starting #{NAME}"
	system START_CMD
end

def stop
	exit 0 unless pid = is_running
	puts "Stopping #{NAME}"
	Process.kill "TERM", pid
	while File.directory? "/proc/#{pid}"
		sleep 0.1
	end
end

case ARGV[0]

when "start"
	start

when "stop"
	stop

when "status"
	if is_running
		puts "Running"
		exit 0
	else
		puts "Not running"
		exit 1
	end

when "restart"
	stop if is_running
	start

else
	raise "Invalid command #{ARGV[0]}"

end
